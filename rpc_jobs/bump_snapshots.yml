- job:
    name: 'Bump-Snapshot-Images'
    project-type: pipeline
    concurrent: false
    properties:
      - build-discarder:
          days-to-keep: 30
    parameters:
      - rpc_gating_params
    triggers:
      - timed: "@daily"
    dsl: |
      library "rpc-gating@${RPC_GATING_BRANCH}"
      common.globalWraps(){
        dir("releases") {
          git branch: 'master', url: 'https://github.com/rcbops/releases'
        }
        // NOTE(mattt): We re-clone rpc-gating here because the existing clone
        // has cruft in it which we don't want to have committed in our
        // subsequent PR
        dir("rpc-gating-master") {
          git branch: 'master', url: 'https://github.com/rcbops/rpc-gating'

          def componentData = readFile "${env.WORKSPACE}/releases/components/rpc-openstack.yml"
          def rpcoReleases = readYaml text: componentData

          List releases = []

          for ( r in rpcoReleases['releases'] ) {
            if (r['series'] == 'newton') {
              for ( s in ['trusty', 'xenial'] ) {
                def image = "${s}_loose_artifacts-swift"
                releases << [series: r['series'],
                             latest: r['versions'][0]['version'],
                             previous: r['versions'][1]['version'],
                             image: image]
              } // for
            } else {
              releases << [series: r['series'],
                           latest: r['versions'][0]['version'],
                           previous: r['versions'][1]['version'],
                           image: 'xenial_no_artifacts-swift' ]
            } // if
          } // for

          def parallelBuilds = [:]

          for ( r in releases ) {
            def release = r
            println r

            parallelBuilds["${release['series']}-${release['image']}"] = {
              build(
                job: 'PM_rpc-gating-master-snapshot-snapshot-test',
                wait: true,
                parameters: [
                  [
                    $class: "StringParameterValue",
                    name: "RPC_GATING_BRANCH",
                    value: env.RPC_GATING_BRANCH,
                  ],
                  [
                    $class: "StringParameterValue",
                    name: "BRANCH",
                    value: env.RPC_GATING_BRANCH,
                  ],
                  [
                    $class: "StringParameterValue",
                    name: "IMAGE",
                    value: "rpc-${release['latest']}-${release['image']}",
                  ]
                ]
              )
            } // parallelBuilds
          } // for

          parallel parallelBuilds

          for ( release in releases ) {
            sh """#!/bin/bash -xe
              sed -i "s/rpc-${release['previous']}-${release['image']}/rpc-${release['latest']}-${release['image']}/g" rpc_jobs/*.yml
            """
          } // for

          withEnv(
            [
              "ISSUE_SUMMARY=Bump snapshot versions",
              "ISSUE_DESCRIPTION=This change was triggered by the jenkins job Bump-Snapshot-Images.",
              "LABELS=snapshot-bump",
              "JIRA_PROJECT_KEY=RE",
              "TARGET_BRANCH=master",
              "COMMIT_TITLE=Bump snapshot versions",
              "COMMIT_MESSAGE=This change was triggered by the jenkins job Bump-Snapshot-Images.",
            ]
          ) {
            withCredentials(
              [
                string(
                  credentialsId: 'rpc-jenkins-svc-github-pat',
                  variable: 'PAT'
                ),
                usernamePassword(
                  credentialsId: "jira_user_pass",
                  usernameVariable: "JIRA_USER",
                  passwordVariable: "JIRA_PASS"
                ),
              ]
            ) {
              sshagent (credentials:['rpc-jenkins-svc-github-ssh-key']) {
                String git_status = sh(
                  returnStdout: true,
                  script: """#!/bin/bash -xe
                    git status -s
                  """
                ).trim()

                if (git_status) {
                  sh """#!/bin/bash -xe
                    set +x; . ${WORKSPACE}/.venv/bin/activate; set -x
                    ${WORKSPACE}/rpc-gating/scripts/commit_and_pull_request.sh
                  """
                } // if
              } // sshagent
            } // withCredentials
          } // withEnv
        } // dir
      } // globalWraps
