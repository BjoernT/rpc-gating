- job:
    name: RE-unit-test-artefact-publication
    project-type: pipeline
    concurrent: true
    properties:
      - build-discarder:
          num-to-keep: 30
    parameters:
      - rpc_gating_params
    dsl: |
      library "rpc-gating@${RPC_GATING_BRANCH}"
      common.globalWraps(){
        // Do something that creates an artifact
        stage("Build"){
          // ARA placeholder included to test that an ARA
          // link is added to the sidebar of the index page
          // when an ARA report is present.
          sh """
            mkdir -p artifacts
            mkdir -p artifacts_report
            mkdir -p artifacts/localhost/host/openstack/log/ara-report
            echo "<html>ara report placeholder</html>" \
              > artifacts/localhost/host/openstack/log/ara-report/index.html;
            date > artifacts/datestamp
            hostname > artifacts/hostname
            echo "<html>dstat report placeholder</html>" \
              > /var/log/dstat.html
            cp -vr /var/log artifacts
            cp -r artifacts file_artifacts_dest
            cp -r artifacts file_artifacts_no_dest
          """

          // Set the RE_JOB_REPO_NAME (normally done by standard jobs)
          env.RE_JOB_REPO_NAME = "rpc-gating"

          // Create a temporary component_metadata file
          def artifacts_data = [
            artifacts: [
              [
                type: "file",
                source: "${env.WORKSPACE}/file_artifacts_dest",
                dest: "${env.JOB_NAME}/${env.BUILD_NUMBER}",
                expire_after: 86400
              ],
              [
                type: "file",
                source: "${env.WORKSPACE}/file_artifacts_no_dest",
                expire_after: 86400
              ]
            ]
          ]
          writeYaml file: "${env.WORKSPACE}/${env.RE_JOB_REPO_NAME}/component_metadata.yml", data: artifacts_data
        }
        common.archive_artifacts(artifact_types: "all")
      }
