- job:
    name: 'Merge-Trigger-JJB'
    project-type: workflow
    logrotate:
      daysToKeep: 14
    properties:
      - rpc-gating-github
    triggers:
      - github # triggered post merge, not on PR
    dsl: |
      node(){
        stage('Run Jenkins Job Builder') {
          git branch: "master", url: "https://github.com/rcbops/rpc-gating"
          build job: "Jenkins-Job-Builder"
        } // stage
      } // node

- job:
    name: 'Jenkins-Job-Builder'
    description: Creates and updates jobs with Jenkins Job Builder.
    logrotate:
        daysToKeep: 20
    parameters:
        - string:
            name: JOBS
            description: "Which jobs to update and with what options."
            default: -r rpc-jobs
        - bool:
            name: IGNORE_CACHE
            description: "Ignore cache when updating jobs."
        - bool:
            name: DELETE_OLD
            description: "Remove jobs that are no longer defined."
            default: true
        - rpc_gating_params
    # Variables used in the scm plugin are expanded when the job is triggered
    # by user or pr, but not on branch merge.
    scm:
        - git:
            url: $RPC_GATING_REPO
            branches:
                - $RPC_GATING_BRANCH
            wipe-workspace: false
    wrappers:
      - credentials-binding:
          - username-password-separated:
             credential-id: service_account_jenkins_api_creds
             username: JENKINS_USER
             password: JENKINS_API_PASSWORD
    builders:
        - shell: |
            scl enable python27 bash

            if [[ ! -d ".venv" ]]; then
                virtualenv -p /opt/rh/python27/root/usr/bin/python .venv
            fi
            source .venv/bin/activate

            pip install -c constraints.txt jenkins-job-builder

            cat > jenkins_jobs.ini << EOF
            [job-builder]
            ignore_cache=False
            keep_descriptions=False
            include_path=.:scripts:~/git/
            recursive=True
            exclude=.*manual:./development
            allow_deplicates=False

            [jenkins]
            url=${JENKINS_URL}
            EOF

            if [ "$IGNORE_CACHE" = "true" ]; then
                JJB_ARGS="--ignore-cache"
            fi
            if [ "$DELETE_OLD" = "true" ]; then
                UPDATE_ARGS="--delete-old"
            fi

            jenkins-jobs --conf jenkins_jobs.ini \
                         --user $JENKINS_USER \
                         --password $JENKINS_API_PASSWORD \
                         $JJB_ARGS update $UPDATE_ARGS $JOBS
